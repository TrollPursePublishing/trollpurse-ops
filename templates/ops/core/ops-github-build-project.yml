AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Create a CI Build Project that outputs game binaries to S3 for distribution or other pipelines.
Parameters:
  ClientDownloadBucketName:
    Type: String
    Description: S3 bucket name where the game binary will be published

  GitHubRepositoryName:
    Type: String
    Description: The name of the repository

  GitHubOrganization:
    Type: String
    Description: The name of the organization or user

  ProjectEnvironmentType:
    Type: String
    Description: The type for the project configuration
    AllowedValues:
      - ARM_CONTAINER
      - LINUX_CONTAINER
      - LINUX_GPU_CONTAINER
      - WINDOWS_CONTAINER
      - WINDOWS_SERVER_2019_CONTAINER
    Default: WINDOWS_SERVER_2019_CONTAINER
      
  ProjectEnvironmentComputeType:
    Type: String
    Description: The compute size type for the project
    AllowedValues:
      - BUILD_GENERAL1_SMALL
      - BUILD_GENERAL1_MEDIUM
      - BUILD_GENERAL1_LARGE
      - BUILD_GENERAL1_2XLARGE
    Default: BUILD_GENERAL1_MEDIUM
    
  GitLfsUri:
    Type: String
    Description: Git LFS URI to download lfs content from. Leave empty to ignore
    Default: ""

  ProjectEnvironmentImageName:
    Type: String
    Description: The image to use for the build
    Default: "aws/codebuild/windows-base:2019-1.0"

  BuildRoleArn:
    Type: String
    Description: ARN for the build role. Should enable access to the CodePipeline artifact store, ECR, and logging.

Outputs:
  ProjectName:
    Description: The name of the Build Project
    Value: !Ref BuildProject

Resources:
  BuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub '${AWS::StackName}-Build'
      Description: !Sub 'Build project for ${AWS::StackName}.'
      ServiceRole: !Ref BuildRoleArn
      BadgeEnabled: true
      Artifacts:
        Type: S3
        Location: !Ref ClientDownloadBucketName
        Packaging: ZIP
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: true
        ReportBuildStatus: true
        Location: !Sub "https://github.com/${GitHubOrganization}/${GitHubRepositoryName}.git"
      Triggers:
        Webhook: true
        FilterGroups:
          -
            - Type: EVENT
              Pattern: PUSH
            - Type: COMMIT_MESSAGE
              Pattern: ^release
          -
            - Type: EVENT
              Pattern: PUSH
            - Type: HEAD_REF
              Pattern: ^refs/tags/(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
      Environment:
        Type: !Ref ProjectEnvironmentType
        ComputeType: !Ref ProjectEnvironmentComputeType
        Image: !Ref ProjectEnvironmentImageName
        ImagePullCredentialsType: CODEBUILD
        EnvironmentVariables:
          - Value: !Ref GitLfsUri
            Name: GIT_LFS_URI
      TimeoutInMinutes: 120

  BuildProjectLogGroup:
    Type: AWS::Logs::LogGroup
    Properties: 
      LogGroupName: !Sub "/aws/codebuild/${BuildProject}"
      RetentionInDays: 7
