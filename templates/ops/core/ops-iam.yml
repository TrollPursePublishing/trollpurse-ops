AWSTemplateFormatVersion: 2010-09-09
Description: Defines Default IAM roles if you allow the CloudFormation Template to create IAM roles for you.
Parameters:
  ArtifactStoreBucketArn:
    Type: String
    Description: Bucket ARN where pipeline artifacts are stored.
  ClientDownloadBucketArn:
    Type: String
    Description: Bucket ARN where the final client build is stored.
  CodeBuildImageEcrArn:
    Type: String
    Description: ECR ARN where codebuild build images are stored.

Outputs:
  CodeBuildRoleArn:
    Description: ARN for the CodeBuild role, enables logging, ECR access, and access to artifacts
    Value: !Sub "${CodeBuildRoleArn.Arn}"

  CodePipelineServiceRoleArn:
    Description: ARN for the Code Pipeline role, enables full access to CodeDeploy, CodeBuild, CodePipeline, and Logs
    Value: !Sub "${CodePipelineServiceRole.Arn}"

Resources:
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:GetRole'
                  - 'iam:PassRole'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*CodePipelineServiceRole*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
              - Effect: Allow
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:Get*"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:*MultipartUpload*"
                Resource:
                  - !Join
                    - ''
                    - - !Ref ArtifactStoreBucketArn
                      - /*
                  - !Ref ArtifactStoreBucketArn
                  - !Join
                    - ''
                    - - !Ref ClientDownloadBucketArn
                      - /*
                  - !Ref ClientDownloadBucketArn

  CodeBuildContainerArn:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${AWS::StackName}ECRBuild"
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
          - PolicyName: !Sub "${AWS::StackName}ECRBuild"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "ecr:GetDownloadUrlForLayer"
                    - "ecr:BatchGetImage"
                    - "ecr:BatchCheckLayerAvailability"
                  Resource:
                    - !Ref CodeBuildImageEcrArn
          - PolicyName: !Sub "${AWS::StackName}ECRBuildLogs"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource:
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-ECRBuild:*:*"
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-ECRBuild:*"
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-ECRBuild"
    
  CodeBuildRoleArn:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub "${AWS::StackName}-Build"
      AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
          - PolicyName: !Sub "${AWS::StackName}ECRRead"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "ecr:GetDownloadUrlForLayer"
                    - "ecr:BatchGetImage"
                    - "ecr:BatchCheckLayerAvailability"
                  Resource:
                    - !Ref CodeBuildImageEcrArn
          - PolicyName: !Sub "${AWS::StackName}BuildLogs"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "logs:CreateLogGroup"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource:
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-Build:*:*"
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-Build:*"
                    - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-Build"
          - PolicyName: !Sub "${AWS::StackName}Artifacts"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "s3:ListBucket"
                    - "s3:Get*"
                    - "s3:PutObject"
                    - "s3:PutObjectAcl"
                    - "s3:*MultipartUpload*"
                  Resource:
                    - !Ref ArtifactStoreBucketArn
                    - !Join
                      - ''
                      - - !Ref ArtifactStoreBucketArn
                        - '/*'