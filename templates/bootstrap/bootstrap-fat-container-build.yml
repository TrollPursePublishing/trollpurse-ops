AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Bootstrap template to configure automation of the large container builder custom action. This is a stack that deploys a stack form a github repository and will not complete until that does.
Parameters:
  TemplateArtifactBucketName:
    Type: String
    Description: Ref to S3 Bucket for Target and Source S3 Bucket Arn for CodePipeline/Build Artifacts.
  PackageArtifactBucketName:
    Type: String
    Description: S3 Bucket name for packaging stuff readable by CloudFormation.
  PackageArtifactBucketArn:
    Type: String
    Description: S3 Bucket Arn for packaging stuff readable by CloudFormation.
  CodePipelineRoleArn:
    Type: String
    Description: ARN for the executing code pipeline configuration
  CodeBuildRoleArn:
    Type: String
    Description: ARN for the executing code build configuration.
  BranchName:
    Description: GitHub branch name for release builds
    Type: String
    Default: master
  GithubRepositoryName:
    Description: GitHub repository name. For example, my-website
    Type: String
    Default: aws-codepipeline-custom-action
  GithubOrganization:
    Type: String
    Description: The owner of the repository. For an organization, it is the name of the organization
    Default: TrollPursePublishing
  GithubAccessToken:
    Type: String
    Description: Needed to pull changes from Github (no webhook)
    NoEcho: true
Outputs:
  FatContainerBuilderName:
    Description: Custom Action Provider Name
    Value: LargeContainerBuilder

Resources:
  LambdaDeployWaitHandle:
    Type: AWS::CloudFormation::WaitConditionHandle
  
  LambdaDeployWaitCondition:
    Type: AWS::CloudFormation::WaitCondition
    Properties: 
      Count: 1
      Handle: !Ref LambdaDeployWaitHandle
      Timeout: "600"
  
  LambdaDeployedSignal:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${AWS::StackName}-FCBS"
      ServiceRole: !Ref CodeBuildRoleArn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        EnvironmentVariables:
          - Value: LargeContainerBuilder
            Name: PROVIDER_NAME
          - Value: !Ref LambdaDeployWaitHandle
            Name: SIGNAL_URL
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: >
          version 0.2
          
          phases:
            build:
              commands:
                - 'curl --silent --output /dev/null -X PUT -H ''Content-Type:'' --data-binary ''{"Status":"SUCCESS","Reason":"Custom Action Deployed","UniqueId":"$PROVIDER_NAME","Data":"Application has completed configuration."}'' "$SIGNAL_URL"'
        
  FatContainerBuilder:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${AWS::StackName}-FCB"
      ServiceRole: !Ref CodeBuildRoleArn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: |
          version: 0.2
          
          phases:
            install:
              runtime-versions:
                python: 3.7
              commands:
                - pip install --upgrade pip
                - pip install --upgrade awscli
                - apt-get update
                - apt-get -y install ruby-full
                - apt-get -y install jq
                - gem install cfn-nag
            pre_build:
              commands:
                - mkdir ${CODEBUILD_SRC_DIR}/container-builder
                - touch ${CODEBUILD_SRC_DIR}/container-builder/config.json
                - aws cloudformation validate-template --template-body file://${CODEBUILD_SRC_DIR}/template.yml
                - cfn_nag_scan --input-path ${CODEBUILD_SRC_DIR}/template.yml
            build:
              commands:
                - aws cloudformation package --template-file ${CODEBUILD_SRC_DIR}/template.yml --output-template-file ${CODEBUILD_SRC_DIR}/container-builder/main.yml --s3-bucket ${TEMPLATE_BUCKET} --s3-prefix container-builder
            post_build:
              commands:
                - aws cloudformation validate-template --template-body file://${CODEBUILD_SRC_DIR}/container-builder/main.yml
                - cfn_nag_scan --input-path ${CODEBUILD_SRC_DIR}/container-builder/main.yml
                - 'configuration_template=''{"Parameters":{"CustomActionProviderName": "%s","CustomActionProviderVersion": "%s"}}'''
                - printf "$configuration_template" "$PROVIDER_NAME" "$CODEBUILD_BUILD_NUMBER" > ${CODEBUILD_SRC_DIR}/container-builder/config.json
          artifacts:
            name: TemplateOutput
            files:
              - 'container-builder/main.yml'
              - 'container-builder/config.json'
            discard-paths: no
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        EnvironmentVariables:
          - Value: !Ref PackageArtifactBucketName
            Name: TEMPLATE_BUCKET
          - Value: LargeContainerBuilder
            Name: PROVIDER_NAME
          - Value: !Ref LambdaDeployWaitHandle
            Name: SIGNAL_URL
        
  CloudFormationDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: cloudformation.amazonaws.com
          Action: sts:AssumeRole
      Path: /ops/
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMFullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/CloudWatchEventsFullAccess
        - arn:aws:iam::aws:policy/AWSCodePipelineFullAccess
        - arn:aws:iam::aws:policy/AWSStepFunctionsFullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Policies:
        - PolicyName: !Sub "${AWS::StackName}CfPolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
            - Effect: Allow
              Action:
                - "s3:GetObject"
                - "s3:GetObjectVersion"
              Resource:
                - !Join
                  - ''
                  - - !Ref PackageArtifactBucketArn
                    - /*
                - !Ref PackageArtifactBucketArn
  
  FatContainerBuilderPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub '${AWS::StackName}FCBPipeline'
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Location: !Ref TemplateArtifactBucketName
        Type: S3
      Stages:
        - Name: Source
          Actions:
            - Name: BuilderCfTemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GithubOrganization
                Repo: !Ref GithubRepositoryName
                Branch: !Ref BranchName
                OAuthToken: !Ref GithubAccessToken
                PollForSourceChanges: true
              RunOrder: 1
        - Name: BuildPackage
          Actions:
            - Name: BuildPackageCfTemplate
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: TemplateOutput
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref FatContainerBuilder
              RunOrder: 1
        - Name: DeployCf
          Actions:
            - Name: DeployFatContainerBuilder
              InputArtifacts:
                - Name: TemplateOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                StackName: !Sub "${AWS::StackName}FCB"
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                RoleArn: !GetAtt CloudFormationDeployRole.Arn
                TemplatePath: 'TemplateOutput::container-builder/main.yml'
                TemplateConfiguration: 'TemplateOutput::container-builder/config.json'
              RunOrder: 1
            - Name: SignalCompletion
              InputArtifacts:
                - Name: TemplateOutput
              ActionTypeId:
                Category: Test
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref LambdaDeployedSignal
              RunOrder: 2
