AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Bootstrap template to configure automation of new templates from Troll Purse.
Resources:
  TemplateDeploymentBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: 'Retain'
    UpdateReplacePolicy: 'Retain'
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ArtifactStore:
    Type: 'AWS::S3::Bucket'
    DeletionPolicy: 'Retain'
    UpdateReplacePolicy: 'Retain'
    Properties:
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
       Rules:
         - Status: Enabled
           ExpirationInDays: 30
  ArtifactStoreBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref ArtifactStore
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DenyUnEncryptedObjectUploads
            Effect: Deny
            Principal: '*'
            Action: 's3:PutObject'
            Resource: !Join
              - ''
              - - !GetAtt ArtifactStore.Arn
                - /*
            Condition:
              StringNotEquals:
                's3:x-amz-server-side-encryption': 'aws:kms'
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt ArtifactStore.Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false
  TemplateDeploymentBucketPolicy:
    Type: 'AWS::S3::BucketPolicy'
    Properties:
      Bucket: !Ref TemplateDeploymentBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowServiceTemplate
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
                - codepipeline.amazonaws.com
                - codedeploy.amazonaws.com
                - cloudformation.amazonaws.com
            Action: 
              - 's3:GetObject'
              - 's3:GetObjectVersion'
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:PutObjectVersionAcl'
              - 's3:*MultipartUpload*'
            Resource: !Join
              - ''
              - - !GetAtt TemplateDeploymentBucket.Arn
                - /*
          - Sid: AllowRoleTemplateGet
            Effect: Allow
            Principal:
              AWS: 
                - !Sub "${AWS::AccountId}"
            Action: 
              - 's3:GetObject'
              - 's3:GetObjectVersion'
            Resource: !Join
              - ''
              - - !GetAtt TemplateDeploymentBucket.Arn
                - /*
          - Sid: DenyInsecureConnections
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource: !Join
              - ''
              - - !GetAtt TemplateDeploymentBucket.Arn
                - /*
            Condition:
              Bool:
                'aws:SecureTransport': false

  BootstrapCodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Sub "${AWS::StackName}-BS"
      Description: "Build project for Troll Purse Troll Ops."
      ServiceRole: !GetAtt BootstrapRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/standard:4.0"
        EnvironmentVariables:
          - Value: !Ref TemplateDeploymentBucket
            Name: TEMPLATE_BUCKET
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 15

  BootstrapRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/ops/"
      Policies:
        - PolicyName: !Sub "${AWS::StackName}BsLogs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-BS:*:*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-BS:*"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${AWS::StackName}-BS"
        - PolicyName: !Sub "${AWS::StackName}BsArt"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "s3:ListBucket"
                  - "s3:Get*"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:PutObjectVersionAcl"
                  - "s3:*MultipartUpload*"
                Resource:
                  - !GetAtt ArtifactStore.Arn
                  - !Join
                    - ''
                    - - !GetAtt ArtifactStore.Arn
                      - '/*'
                  - !Join
                    - ''
                    - - !GetAtt TemplateDeploymentBucket.Arn
                      - /*
                  - !GetAtt TemplateDeploymentBucket.Arn
        - PolicyName: !Sub "${AWS::StackName}CfValidate"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:ValidateTemplate"
                Resource:
                  - "*"
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /ops/
      Policies:
        - PolicyName: !Sub "${AWS::StackName}CodePipelinePolicy"
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:GetRole'
                  - 'iam:PassRole'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*CodePipelineServiceRole*'
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - "s3:ListBucket"
                  - "s3:Get*"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                  - "s3:PutObjectVersionAcl"
                  - "s3:*MultipartUpload*"
                Resource:
                  - !Join
                    - ''
                    - - !GetAtt ArtifactStore.Arn
                      - /*
                  - !GetAtt ArtifactStore.Arn
                  - !Join
                    - ''
                    - - !GetAtt TemplateDeploymentBucket.Arn
                      - /*
                  - !GetAtt TemplateDeploymentBucket.Arn

  BootstrapPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      Name: !Sub '${AWS::StackName}Pipeline'
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: TemplateSource
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: "1"
                Provider: GitHub
              OutputArtifacts:
                - Name: SourceOutput
              Configuration:
                Owner: !Ref GithubOrganization
                Repo: !Ref GithubRepository
                Branch: !Ref SourceVersion
                OAuthToken: !Ref OAuthToken
                PollForSourceChanges: true
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: ClientBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: "1"
                Provider: CodeBuild
              OutputArtifacts:
                - Name: TemplateOutput
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Ref BootstrapCodeBuildProject
                EnvironmentVariables: !Sub '[{"name":"TEMPLATE_BUCKET","value":"${TemplateDeploymentBucket}","type":"PLAINTEXT"}]'
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: DeployDownloadableClient
              InputArtifacts:
                - Name: TemplateOutput
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: "1"
                Provider: S3
              Configuration:
                BucketName: !Ref TemplateDeploymentBucket
                Extract: true
              RunOrder: 1
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactStore

Parameters:
  GithubOrganization:
    Type: String
    Description: Organization of this repository.
    Default: TrollPursePublishing
  GithubRepository:
    Type: String
    Description: This repository
    Default: trollpurse-ops
  OAuthToken:
    Type: String
    Description: Your PAC from Github, required.
    NoEcho: true
  SourceVersion:
    Type: String
    Description: >-
      The commit ID, pull request ID, branch name, or tag name that corresponds to the version of
      the source code you want to build. If a pull request ID is specified, it must use the format
      pr/pull-request-ID (for example pr/25). If a branch name is specified, the branch's HEAD
      commit ID is used. If not specified, the default branch's HEAD commit ID is used.
    Default: main

Outputs:
  GamePipelineBootstrapMagicLink:
    Description: Magic link to do the onetime kickoff of the UE4 pre-requisite build project for all of your UE4 projects.
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=${AWS::Region}#/stacks/create/review?templateURL=https://${TemplateDeploymentBucket.RegionalDomainName}/bootstrap-main.yml&stackName=GamePipelinesBootstrap"
    Export:
      Name: GlobalOps-GamePipelineMagicLink
  UnrealEngine4MagicLink:
    Description: Magic link to kick off the UE4 build process and bootstrap a pipeline for your UE4 project.
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/cloudformation/home?region=${AWS::Region}#/stacks/create/review?templateURL=https://${TemplateDeploymentBucket.RegionalDomainName}/ue4-main.yml&stackName=MyUE4Project"
    Export:
      Name: GlobalOps-UE4MagicLink
